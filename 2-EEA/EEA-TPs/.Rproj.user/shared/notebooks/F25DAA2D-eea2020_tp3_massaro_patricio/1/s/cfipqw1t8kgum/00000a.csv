"0",""
"0","prediction_metrics <- function(cutoff, df)"
"0","  {"
"0","  table <- df %>% "
"0","    mutate(predicted_class=if_else(.fitted>cutoff, 1, 0) %>% as.factor(),"
"0","           Survived= factor(Survived))"
"0","  "
"0","  confusionMatrix(data = table$predicted_class,reference = table$Survived, positive = ""1"") %>%"
"0","    tidy() %>%"
"0","    dplyr::select(term, estimate) %>%"
"0","    filter(term %in% c('accuracy', 'sensitivity', 'specificity', 'precision','f1')) %>%"
"0","    mutate(cutoff=cutoff)"
"0","  "
"0","}"
"0",""
"0","plot_confmatrix_data  <- function (df,name)"
"0","  {"
"0","    cutoffs = seq(0.01,1,0.01)"
"0","    logit_pred_val= map_dfr(cutoffs, function(x){prediction_metrics(cutoff = x,df = df)})%>% mutate(term=as.factor(term))"
"0","    "
"0","    ggplot(logit_pred_val, aes(cutoff,estimate, group=term, color=term)) + geom_line(size=1) +"
"0","                    theme_bw() +"
"0","                    labs(title= 'MÃ©tricas del modelo', subtitle= name, color="""") "
"0","    "
"0","  }"
"0",""
"0","models <- models %>% "
"0","            mutate("
"0","              matrix_val_data = map2(pred_val,models,plot_confmatrix_data)"
"0","              )"
"0",""
"0","ggarrange( plotlist = models$matrix_val_data, nrow=2,ncol = 2)"
